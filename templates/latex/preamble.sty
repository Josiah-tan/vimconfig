%\documentclass{report}
\ProvidesPackage{preamble}
\usepackage{enumitem}   
\usepackage{float}
\usepackage{hyperref}

\usepackage[toc,page]{appendix} % experiment
\usepackage[final]{pdfpages}
\usepackage{textcomp}% for the trademark / registered symbol

% \usepackage{natbib} % for bibliography
\usepackage{amsmath}

\usepackage[final]{pdfpages}

\usepackage{graphicx} % for cropping images
\usepackage{subcaption}

\usepackage{url}% helps with url escape characters?

\usepackage{siunitx} % for  plus minus symbol

\usepackage{graphicx}
\usepackage[verbose]{wrapfig} %for wrapfigs
\usepackage{multicol}


\usepackage{tikz}

\usepackage{multirow}

\usepackage{amssymb}% 
\usepackage{pifont}% 
\newcommand{\cmark}{\ding{51}}% \\for the cmark?

\usepackage{geometry}
 \geometry{
 a4paper,
 total={170mm,257mm},
 left=20mm,
 top=20mm,
 } %this changes the layout of tha actual page itself, In my opinion it looks a lot better
 
 %%%%%%%%%%%%%%%%%% Matlab highlighting
\usepackage{listings}

\usepackage{color} %red, green, blue, yellow, cyan, magenta, black, white
\definecolor{mygreen}{RGB}{28,172,0} % color values Red, Green, Blue
\definecolor{mylilas}{RGB}{170,55,241}

\newcommand\matlabstyle{\lstset{language=Matlab,%
    %basicstyle=\color{red},
    breaklines=true,%
    morekeywords={matlab2tikz},
    keywordstyle=\color{blue},%
    morekeywords=[2]{1}, keywordstyle=[2]{\color{black}},
    identifierstyle=\color{black},%
    stringstyle=\color{mylilas},
    commentstyle=\color{mygreen},%
    showstringspaces=false,%without this there will be a symbol in the places where there is a space
    numbers=left,%
    numberstyle={\tiny \color{black}},% size of the numbers
    numbersep=9pt, % this defines how far the numbers are from the text
    emph=[1]{for,end,break},emphstyle=[1]\color{red}, %some words to emphasise
    %emph=[2]{word1,word2}, emphstyle=[2]{style},
    %basicstyle = \tiny % make font small?
    }}

% Matlab environment
\lstnewenvironment{matlab}[1][]
{
\matlabstyle
\lstset{#1}
}
{}

% Matlab for external files
\newcommand\matlabexternal[2][]{{
\matlabstyle
\lstinputlisting[#1]{#2}}}

% Matlab for inline
\newcommand\matlabinline[1]{{\matlabstyle\lstinline!#1!}}


%%%%%%%%%%%%%%%%%%
%command prompt listings
\usepackage{xcolor}

\lstdefinestyle{DOS}
{
    basicstyle=\normalfont\ttfamily,
    numbers=left
    %backgroundcolor=\color{white},
    %basicstyle=\scriptsize\color{black}\ttfamily
}


%%%%%%%%%%%%%%%%%%
%JSON listings

\usepackage{bera}% optional: just to have a nice mono-spaced font
\usepackage{listings}
\usepackage{xcolor}

\colorlet{punct}{red!60!black}
\definecolor{background}{HTML}{EEEEEE}
\definecolor{delim}{RGB}{20,105,176}
\colorlet{numb}{magenta!60!black}

\newcommand\jsonstyle{\lstset{language=json,
    basicstyle=\normalfont\ttfamily,
    numbers=left,
    numberstyle=\scriptsize,
    stepnumber=1,
    numbersep=8pt,
    showstringspaces=false,
    breaklines=true,
    frame=lines,
    backgroundcolor=\color{background},
    literate=
     *{0}{{{\color{numb}0}}}{1}
      {1}{{{\color{numb}1}}}{1}
      {2}{{{\color{numb}2}}}{1}
      {3}{{{\color{numb}3}}}{1}
      {4}{{{\color{numb}4}}}{1}
      {5}{{{\color{numb}5}}}{1}
      {6}{{{\color{numb}6}}}{1}
      {7}{{{\color{numb}7}}}{1}
      {8}{{{\color{numb}8}}}{1}
      {9}{{{\color{numb}9}}}{1}
      {:}{{{\color{punct}{:}}}}{1}
      {,}{{{\color{punct}{,}}}}{1}
      {\{}{{{\color{delim}{\{}}}}{1}
      {\}}{{{\color{delim}{\}}}}}{1}
      {[}{{{\color{delim}{[}}}}{1}
      {]}{{{\color{delim}{]}}}}{1},
}}
% Json for external files
\newcommand\jsonexternal[2][]{{
\jsonstyle
\lstinputlisting[#1]{#2}}}



%%%%%%%%%%%%%%%%%%
%python highlighting
\usepackage[utf8]{inputenc}

% Default fixed font does not support bold face
\DeclareFixedFont{\ttb}{T1}{txtt}{bx}{n}{12} % for bold
\DeclareFixedFont{\ttm}{T1}{txtt}{m}{n}{12}  % for normal

% Custom colors
\usepackage{color}
\definecolor{deepblue}{rgb}{0,0,0.5}
\definecolor{deepred}{rgb}{0.6,0,0}
\definecolor{deepgreen}{rgb}{0,0.5,0}

%\usepackage{listings}

% Python style for highlighting
\newcommand\pythonstyle{\lstset{
language=Python,
basicstyle=\ttm,
otherkeywords={self},             % Add keywords here
keywordstyle=\ttb\color{deepblue},
emph={MyClass,__init__},          % Custom highlighting
emphstyle=\ttb\color{deepred},    % Custom highlighting style
stringstyle=\color{deepgreen},
frame=tb,                         % Any extra options here
showstringspaces=false            % 
}}


% Python environment
\lstnewenvironment{python}[1][]
{
\pythonstyle
\lstset{#1}
}
{}

% Python for external files
\newcommand\pythonexternal[2][]{{
\pythonstyle
\lstinputlisting[#1]{#2}}}

% Python for inline
\newcommand\pythoninline[1]{{\pythonstyle\lstinline!#1!}}

%%%%%%%%%%%%
% Arduino 
% custom footers and headers
\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{}
\chead{}
\rhead{}
%\lfoot{Arduino Blink Example}
\cfoot{}
\rfoot{Page \thepage}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}
%

% code listing settings
\usepackage{listings}

\newcommand\arduinostyle{\lstset{
  language = Octave,
  backgroundcolor=\color{white},   
  basicstyle=\footnotesize\ttfamily,       
  breakatwhitespace=false,         
  breaklines=true,                 
  captionpos=b,                   
  commentstyle=\color{gray},    
  deletekeywords={...},           
  escapeinside={\%*}{*)},          
  extendedchars=true,              
  frame=single,                    
  keepspaces=true,                 
  keywordstyle=\color{orange},       
  morekeywords={*,...},            
  numbers=left,                    
  numbersep=5pt,                   
  numberstyle=\footnotesize\color{gray}, 
  rulecolor=\color{black},         
  rulesepcolor=\color{blue},
  showspaces=false,                
  showstringspaces=false,          
  showtabs=false,                  
  stepnumber=2,                    
  stringstyle=\color{orange},    
  tabsize=2,                       
  title=\lstname,
  emphstyle=\bfseries\color{blue},%  style for emph={} 
  keywords={void, int boolean},%                 define keywords
  morecomment=[l]{//},%             treat // as comments
  morecomment=[s]{/*}{*/},%         define /* ... */ comments
  emph={HIGH, OUTPUT, LOW}%        keywords to emphasize
}}



% arduino for external files
\newcommand\arduinoexternal[2][]{{
\arduinostyle
\lstinputlisting[#1]{#2}}}

% arduino for inline
\newcommand\arduinoinline[1]{{\arduinostyle\lstinline!#1!}}

% arduino environment
\lstnewenvironment{arduino}[1][]
{
\arduinostyle
\lstset{#1}
}
{}



%%%%%%%%%%%%
\def\therefore{\boldsymbol{\text{ }
\leavevmode
\lower0.4ex\hbox{$\cdot$}
\kern-.5em\raise0.7ex\hbox{$\cdot$}
\kern-0.55em\lower0.4ex\hbox{$\cdot$}
\thinspace\text{ }}} %for the therefore symbol
%%%%%%%%%%%

% For interactive references and table of contents (you can click on them)
\usepackage{hyperref}


% Includes the bibliography in the table of contents.
\usepackage[nottoc, notlot, notlof]{tocbibind} 

\usepackage{lscape}

\setlength{\parskip}{0.5\baselineskip plus2pt minus2pt} % Lines after each paragraph

\captionsetup{
    width=\linewidth, % width of caption is 120% of current textwidth
    labelfont=bf,        % the label, e.g. figure 12, is bold
    font=small,          % the whole caption text (label + content) is small
    format=hang,         % no caption text under the label
}
\captionsetup[subfigure]{
    format=plain,   % allowed in subfigure to save space
}

% to include variables
\usepackage{datatool, filecontents}
\DTLsetseparator{ = }% Set the separator between the columns. Could be
% anything you like. Whitespaces are not trimmed, so you have to set
%them as part of the separator.

% \begin{filecontents*}{mydata.dat}
% foo = 10
% bar = 20
% "x" = 30
% \end{filecontents*}

\DTLloaddb[noheader, keys={thekey,thevalue}]{mydata}{main.dat}
% Loads mydata.dat with column headers 'thekey' and 'thevalue'

\newcommand{\getVariable}[1]{\DTLfetch{mydata}{thekey}{#1}{thevalue}}
